From 553870641a68b303b792dc00a14cbb744d166d16 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Wed, 27 Oct 2021 18:35:25 +1100
Subject: [PATCH vopenssl3 4/6] adapt make_ssl_data to generate errorcodes.py

---
 lib_pypy/_cffi_ssl/tools/make_ssl_data.py | 36 ++++++++++-------------
 1 file changed, 15 insertions(+), 21 deletions(-)

diff --git a/lib_pypy/_cffi_ssl/tools/make_ssl_data.py b/lib_pypy/_cffi_ssl/tools/make_ssl_data.py
index ca8ecfb..3238a8c 100644
--- a/lib_pypy/_cffi_ssl/tools/make_ssl_data.py
+++ b/lib_pypy/_cffi_ssl/tools/make_ssl_data.py
@@ -3,11 +3,13 @@
 """
 This script should be called *manually* when we want to upgrade SSLError
 `library` and `reason` mnemnonics to a more recent OpenSSL version.
-
 It takes two arguments:
 - the path to the OpenSSL source tree (e.g. git checkout)
-- the path to the header file to be generated Modules/_ssl_data_{version}.h
+- the path to the wrapper file to be generated
 - error codes are version specific
+
+Sample invocation (from folder containing this file):
+python make_ssl_data.py ../openssl/src/ ../_stdssl/errorcodes.py
 """
 
 import argparse
@@ -70,28 +72,19 @@ def parse_extra_reasons(args):
 
 def gen_library_codes(args):
     """Generate table short libname to numeric code"""
-    yield "static struct py_ssl_library_code library_codes[] = {"
+    yield "_lib_codes = ["
     for libname in sorted(args.lib2errnum):
-        yield f"#ifdef ERR_LIB_{libname}"
-        yield f'    {{"{libname}", ERR_LIB_{libname}}},'
-        yield "#endif"
-    yield "    { NULL }"
-    yield "};"
+        yield f'    ("{libname}", lib.ERR_LIB_{libname}),'
+    yield "]"
     yield ""
 
 
 def gen_error_codes(args):
     """Generate error code table for error reasons"""
-    yield "static struct py_ssl_error_code error_codes[] = {"
+    yield "_error_codes = ["
     for reason, libname, errname, num in args.reasons:
-        yield f"  #ifdef {reason}"
-        yield f'    {{"{errname}", ERR_LIB_{libname}, {reason}}},'
-        yield "  #else"
-        yield f'    {{"{errname}", {args.lib2errnum[libname]}, {num}}},'
-        yield "  #endif"
-
-    yield "    { NULL }"
-    yield "};"
+        yield f'    ("{errname}", lib.ERR_LIB_{libname}, {num}),'
+    yield "]"
     yield ""
 
 
@@ -119,15 +112,16 @@ def main():
     args.reasons = sorted(reasons, key=operator.itemgetter(0, 3))
 
     lines = [
-        "/* File generated by Tools/ssl/make_ssl_data.py */"
-        f"/* Generated on {datetime.datetime.utcnow().isoformat()} */"
+        "# File generated by lib_pypy/_cffi_ssl/tools/make_ssl_data.py",
+        f"# Generated on {datetime.datetime.utcnow().isoformat()}",
+        "",
+        "from _pypy_openssl import ffi, lib"
     ]
     lines.extend(gen_library_codes(args))
     lines.append("")
     lines.extend(gen_error_codes(args))
 
-    for line in lines:
-        args.output.write(line + "\n")
+    args.output.write("\n".join(lines))
 
 
 if __name__ == "__main__":
-- 
2.32.0.windows.2

